CREATE TABLE "users" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "username" VARCHAR(50) UNIQUE,
  "email" VARCHAR(100) UNIQUE,
  "password" VARCHAR(255),
  "created_at" DATETIME,
  "picture" varchar(255),
  "provider" varchar(20)
);

CREATE TABLE "songs" (
  "song_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" VARCHAR(100),
  "duration" TIME,
  "album_id" INT,
  "artist_id" INT,
  "file_path" VARCHAR(255)
);

CREATE TABLE "artists" (
  "artist_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" VARCHAR(100),
  "genre" VARCHAR(50)
);

CREATE TABLE "albums" (
  "album_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" VARCHAR(100),
  "release_date" DATE,
  "artist_id" INT
);

CREATE TABLE "lyrics" (
  "lyrics_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "song_id" INT,
  "lyrics_content" TEXT,
  "timestamp" TIME
);

CREATE TABLE "playlists" (
  "playlist_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" INT,
  "playlist_name" VARCHAR(100),
  "created_at" DATETIME
);

CREATE TABLE "playlist_songs" (
  "playlist_id" INT,
  "song_id" INT
);

CREATE TABLE "song_history" (
  "history_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" INT,
  "song_id" INT,
  "played_at" DATETIME
);

ALTER TABLE "songs" ADD FOREIGN KEY ("album_id") REFERENCES "albums" ("album_id");

ALTER TABLE "songs" ADD FOREIGN KEY ("artist_id") REFERENCES "artists" ("artist_id");

ALTER TABLE "albums" ADD FOREIGN KEY ("artist_id") REFERENCES "artists" ("artist_id");

ALTER TABLE "lyrics" ADD FOREIGN KEY ("song_id") REFERENCES "songs" ("song_id");

ALTER TABLE "playlists" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("user_id");

ALTER TABLE "playlist_songs" ADD FOREIGN KEY ("playlist_id") REFERENCES "playlists" ("playlist_id");

ALTER TABLE "playlist_songs" ADD FOREIGN KEY ("song_id") REFERENCES "songs" ("song_id");

ALTER TABLE "song_history" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("user_id");

ALTER TABLE "song_history" ADD FOREIGN KEY ("song_id") REFERENCES "songs" ("song_id");
