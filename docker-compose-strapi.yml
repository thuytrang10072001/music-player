version: '3'
services:
  frontend:
    container_name: music-player-react
    build:
      context: ./music-player-react
    ports:
      - "8000:80"
      - "443:443"
    volumes:
      - ./music-player-react/nginx.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped

  strapi:
    container_name: strapi
    build: ./strapi
    image: strapi-boilerplate:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: db
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./strapi/config:/opt/app/config
      - ./strapi/src:/opt/app/src
      - ./strapi/package.json:/opt/package.json
      - ./strapi/yarn.lock:/opt/yarn.lock
      - ./strapi/.env:/opt/app/.env
      - ./strapi/public/uploads:/opt/app/public/uploads
    ports:
      - '1337:1337'
    networks:
      - strapi
    depends_on:
      - db

  db:
    container_name: postgres
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:14.5-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - data_db:/var/lib/postgresql/data/ #using a volume
      - ./init_schema:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    networks:
      - strapi

  adminer:
    container_name: adminer
    image: adminer
    restart: unless-stopped
    ports:
      - '9090:8080'
    environment:
      - ADMINER_DEFAULT_SERVER=db
    networks:
      - strapi
    depends_on:
      - db

volumes:
  data_db:

networks:
  strapi:
    name: Strapi
    driver: bridge